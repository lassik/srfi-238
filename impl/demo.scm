(import (scheme base)
        (scheme write)
        (codesets))

(define-syntax show
  (syntax-rules ()
    ((show expr)
     (begin (display 'expr)
            (display " => ")
            (write expr)
            (newline)))))

(define (numbers codeset)
  (map (lambda (code) (codeset-number codeset code))
       (codeset-symbols codeset)))

(show (numbers 'errno))
(show (codeset-symbols 'errno))
(show (codeset-symbol 'errno 2))
(show (codeset-symbol 'errno 'ENOENT))
(show (codeset-number 'errno 2))
(show (codeset-number 'errno 'ENOENT))
(show (codeset-message 'errno 2))
(show (codeset-message 'errno 'ENOENT))
(newline)
(show (numbers 'signal))
(show (codeset-symbols 'signal))
(show (codeset-symbol 'signal 'SIGINT))
(show (codeset-symbol 'signal 2))
(show (codeset-number 'signal 'SIGINT))
(show (codeset-number 'signal 2))
(show (codeset-message 'signal 'SIGINT))
(show (codeset-message 'signal 2))
